============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0
rootdir: /home/abodi-massarwa/Ariel@PycharmProjects/fairpyx
configfile: pyproject.toml
collected 5 items

test_heterogeneous_matroid_constraints_algorithms.py .FF..               [100%]

=================================== FAILURES ===================================
_______________________________ test_algorithm_2 _______________________________

    def test_algorithm_2():
        instance, agent_capacities_2d, categories, order = random_instance(equal_capacities=False)
>       assert is_fef1(divide(algorithm=heterogeneous_matroid_constraints_algorithms.capped_round_robin, instance=instance,
                              item_categories=categories, agent_category_capacities=agent_capacities_2d, order=order),
                       instance=instance
                       , agent_category_capacities=agent_capacities_2d, item_ctegories=categories,
                       valuations_func=instance.agent_item_value) is True
E       AssertionError: assert False is True
E        +  where False = is_fef1({'agent1': [], 'agent2': []}, instance=<fairpyx.instances.Instance object at 0x7ff21d35beb0>, agent_category_capacities={'agent1': {'Category:0': 9, 'Category:1': 13}, 'agent2': {'Category:0': 0, 'Category:1': 9}}, item_ctegories={'Category:0': ['item1'], 'Category:1': ['item3', 'item2']}, valuations_func=<function get_keys_and_mapping_2d.<locals>.<lambda> at 0x7ff21d37f520>)
E        +    where {'agent1': [], 'agent2': []} = divide(algorithm=<function capped_round_robin at 0x7ff27205a7a0>, instance=<fairpyx.instances.Instance object at 0x7ff21d35beb0>, item_categories={'Category:0': ['item1'], 'Category:1': ['item3', 'item2']}, agent_category_capacities={'agent1': {'Category:0': 9, 'Category:1': 13}, 'agent2': {'Category:0': 0, 'Category:1': 9}}, order=['agent2', 'agent1'])
E        +      where <function capped_round_robin at 0x7ff27205a7a0> = heterogeneous_matroid_constraints_algorithms.capped_round_robin
E        +    and   <function get_keys_and_mapping_2d.<locals>.<lambda> at 0x7ff21d37f520> = <fairpyx.instances.Instance object at 0x7ff21d35beb0>.agent_item_value

test_heterogeneous_matroid_constraints_algorithms.py:190: AssertionError
_______________________________ test_algorithm_3 _______________________________

    def test_algorithm_3():
        instance, agent_capacities_2d, categories, order = random_instance(equal_capacities=False)
>       assert is_fef1(divide(algorithm=heterogeneous_matroid_constraints_algorithms.two_categories_capped_round_robin, instance=instance,
                              item_categories=categories, agent_category_capacities=agent_capacities_2d, order=order),
                       instance=instance
                       , agent_category_capacities=agent_capacities_2d, item_ctegories=categories,
                       valuations_func=instance.agent_item_value) is True
E       AssertionError: assert False is True
E        +  where False = is_fef1({'agent1': [], 'agent2': [], 'agent3': [], 'agent4': [], ...}, instance=<fairpyx.instances.Instance object at 0x7ff21d20a4a0>, agent_category_capacities={'agent1': {'Category:0': 16, 'Category:1': 9, 'Category:2': 16}, 'agent2': {'Category:0': 10, 'Category:1': 16, 'Cate...tegory:0': 12, 'Category:1': 7, 'Category:2': 12}, 'agent4': {'Category:0': 7, 'Category:1': 8, 'Category:2': 11}, ...}, item_ctegories={'Category:0': ['item8', 'item9'], 'Category:1': ['item6', 'item3', 'item4', 'item7'], 'Category:2': ['item2', 'item1', 'item5']}, valuations_func=<function get_keys_and_mapping_2d.<locals>.<lambda> at 0x7ff21d1e4040>)
E        +    where {'agent1': [], 'agent2': [], 'agent3': [], 'agent4': [], ...} = divide(algorithm=<function two_categories_capped_round_robin at 0x7ff27205a9e0>, instance=<fairpyx.instances.Instance object at 0x7ff21d20a4a0>, item_categories={'Category:0': ['item8', 'item9'], 'Category:1': ['item6', 'item3', 'item4', 'item7'], 'Category:2': ['item2', 'item1', 'item5']}, agent_category_capacities={'agent1': {'Category:0': 16, 'Category:1': 9, 'Category:2': 16}, 'agent2': {'Category:0': 10, 'Category:1': 16, 'Cate...tegory:0': 12, 'Category:1': 7, 'Category:2': 12}, 'agent4': {'Category:0': 7, 'Category:1': 8, 'Category:2': 11}, ...}, order=['agent6', 'agent8', 'agent1', 'agent4', 'agent5', 'agent7', ...])
E        +      where <function two_categories_capped_round_robin at 0x7ff27205a9e0> = heterogeneous_matroid_constraints_algorithms.two_categories_capped_round_robin
E        +    and   <function get_keys_and_mapping_2d.<locals>.<lambda> at 0x7ff21d1e4040> = <fairpyx.instances.Instance object at 0x7ff21d20a4a0>.agent_item_value

test_heterogeneous_matroid_constraints_algorithms.py:199: AssertionError
=========================== short test summary info ============================
FAILED test_heterogeneous_matroid_constraints_algorithms.py::test_algorithm_2
FAILED test_heterogeneous_matroid_constraints_algorithms.py::test_algorithm_3
========================= 2 failed, 3 passed in 0.55s ==========================
